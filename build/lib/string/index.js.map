{"version":3,"file":"index.js","sources":["../../../src/lib/string/guid.js","../../../src/lib/string/escape.js","../../../src/lib/string/index.js","../../../src/lib/string/camelCase.js","../../../src/lib/string/randomHexColorCode.js"],"sourcesContent":["const S4 = function () {\r\n    return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1)\r\n}\r\n/**\r\n * @description: 生成GUID的方法\r\n * @return {string}:guid\r\n */\r\nconst guid = function () {\r\n    return S4() + S4() + '-' + S4() + '-' + S4() + '-' + S4() + '-' + S4() + S4() + S4()\r\n}\r\nexport default guid\r\n\r\n/**\r\n Another realization  \r\nconst guid = () =>\r\n            [2, 1, 1, 1, 3].reduce(\r\n                (p, c, i, a) => (p += Array.from({ length: c }, (_, i) => (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1)).join('') + (i !== a.length - 1 ? '-' : '')),\r\n                ''\r\n            )\r\n*/\r\n","const htmlEscapes = {\r\n    '&': '&amp',\r\n    '<': '&lt',\r\n    '>': '&gt',\r\n    '\"': '&quot',\r\n    \"'\": '&#39'\r\n}\r\nconst reUnescapedHtml = /[&<>\"']/g\r\nconst reHasUnescapedHtml = RegExp(reUnescapedHtml.source)\r\nconst escape = function (string) {\r\n    return string && reHasUnescapedHtml.test(string) ? string.replace(reUnescapedHtml, chr => htmlEscapes[chr]) : string\r\n}\r\n\r\nexport default escape\r\n","import guid from './guid'\r\nimport camelCase from './camelCase'\r\nimport escape from './escape'\r\nimport randomHexColorCode from './randomHexColorCode'\r\nimport stringAt from './stringAt'\r\n\r\nexport default {\r\n    guid,\r\n    camelCase,\r\n    escape,\r\n    randomHexColorCode\r\n}\r\n","/**\r\n * @description: 转换字符串string为驼峰写法。\r\n * @param {String} str [string=''] (string): 要转换的字符串。\r\n * @return {String} (string): 返回驼峰写法的字符串。\r\n */\r\nconst camelCase = function (str) {\r\n    return str.match(/[a-zA-Z]+/g).reduce((p, c) => {\r\n        c = c.toLowerCase()\r\n        p += c.replace(c[0], c[0].toUpperCase())\r\n        return p\r\n    }, '')\r\n}\r\nexport default camelCase\r\n","/**\r\n * 随机十六进制颜色\r\n */\r\nconst randomHexColorCode = function () {\r\n    let n = (Math.random() * 0xfffff * 1000000).toString(16)\r\n    return '#' + n.slice(0, 6)\r\n}\r\nexport default randomHexColorCode\r\n"],"names":["S4","Math","random","toString","substring","htmlEscapes","reUnescapedHtml","reHasUnescapedHtml","RegExp","source","guid","camelCase","str","match","reduce","p","c","toLowerCase","replace","toUpperCase","escape","string","test","chr","randomHexColorCode","slice"],"mappings":"4LAAW,SAALA,WAC6B,OAArB,EAAIC,KAAKC,UAAuB,GAAGC,SAAS,IAAIC,UAAU,GADxE,ICAMC,EAAc,KACX,WACA,UACA,UACA,YACA,QAEHC,EAAkB,WAClBC,EAAqBC,OAAOF,EAAgBG,cCFnC,CACXC,KFAS,kBACFV,IAAOA,IAAO,IAAMA,IAAO,IAAMA,IAAO,IAAMA,IAAO,IAAMA,IAAOA,IAAOA,KEAhFW,UCHc,SAAUC,UACjBA,EAAIC,MAAM,cAAcC,OAAO,SAACC,EAAGC,UAEtCD,IADAC,EAAIA,EAAEC,eACCC,QAAQF,EAAE,GAAIA,EAAE,GAAGG,gBAE3B,KDDHC,ODAW,SAAUC,UACdA,GAAUd,EAAmBe,KAAKD,GAAUA,EAAOH,QAAQZ,EAAiB,SAAAiB,UAAOlB,EAAYkB,KAAQF,GCA9GG,mBEPuB,iBAEhB,KADkB,QAAhBvB,KAAKC,SAAqB,KAASC,SAAS,IACtCsB,MAAM,EAAG"}